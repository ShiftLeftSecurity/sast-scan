{
    "check_type": "terraform",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_25",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name          = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id        = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = { \n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389"
            },
            {
                "check_id": "CKV_AWS_24",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name          = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id        = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = { \n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22"
            },
            {
                "check_id": "CKV_AWS_60",
                "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        115,
                        "resource \"aws_iam_role\" \"ec2role\" {\n"
                    ],
                    [
                        116,
                        "  name = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        117,
                        "  path = \"/\"\n"
                    ],
                    [
                        118,
                        "\n"
                    ],
                    [
                        119,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        120,
                        "{\n"
                    ],
                    [
                        121,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        122,
                        "    \"Statement\": [\n"
                    ],
                    [
                        123,
                        "        {\n"
                    ],
                    [
                        124,
                        "            \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        125,
                        "            \"Principal\": {\n"
                    ],
                    [
                        126,
                        "               \"Service\": \"ec2.amazonaws.com\"\n"
                    ],
                    [
                        127,
                        "            },\n"
                    ],
                    [
                        128,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        129,
                        "            \"Sid\": \"\"\n"
                    ],
                    [
                        130,
                        "        }\n"
                    ],
                    [
                        131,
                        "    ]\n"
                    ],
                    [
                        132,
                        "}\n"
                    ],
                    [
                        133,
                        "EOF\n"
                    ],
                    [
                        134,
                        "\n"
                    ],
                    [
                        135,
                        "  tags = {      \n"
                    ],
                    [
                        136,
                        "    Name        = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        137,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        138,
                        "  }\n"
                    ],
                    [
                        139,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    115,
                    139
                ],
                "resource": "aws_iam_role.ec2role",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume"
            },
            {
                "check_id": "CKV_AWS_61",
                "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        115,
                        "resource \"aws_iam_role\" \"ec2role\" {\n"
                    ],
                    [
                        116,
                        "  name = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        117,
                        "  path = \"/\"\n"
                    ],
                    [
                        118,
                        "\n"
                    ],
                    [
                        119,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        120,
                        "{\n"
                    ],
                    [
                        121,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        122,
                        "    \"Statement\": [\n"
                    ],
                    [
                        123,
                        "        {\n"
                    ],
                    [
                        124,
                        "            \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        125,
                        "            \"Principal\": {\n"
                    ],
                    [
                        126,
                        "               \"Service\": \"ec2.amazonaws.com\"\n"
                    ],
                    [
                        127,
                        "            },\n"
                    ],
                    [
                        128,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        129,
                        "            \"Sid\": \"\"\n"
                    ],
                    [
                        130,
                        "        }\n"
                    ],
                    [
                        131,
                        "    ]\n"
                    ],
                    [
                        132,
                        "}\n"
                    ],
                    [
                        133,
                        "EOF\n"
                    ],
                    [
                        134,
                        "\n"
                    ],
                    [
                        135,
                        "  tags = {      \n"
                    ],
                    [
                        136,
                        "    Name        = \"${local.resource_prefix.value}-role\"\n"
                    ],
                    [
                        137,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        138,
                        "  }\n"
                    ],
                    [
                        139,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    115,
                    139
                ],
                "resource": "aws_iam_role.ec2role",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount"
            },
            {
                "check_id": "CKV_AWS_62",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        141,
                        "resource \"aws_iam_role_policy\" \"ec2policy\" {\n"
                    ],
                    [
                        142,
                        "  name = \"${local.resource_prefix.value}-policy\"\n"
                    ],
                    [
                        143,
                        "  role = aws_iam_role.ec2role.id\n"
                    ],
                    [
                        144,
                        "\n"
                    ],
                    [
                        145,
                        "  policy = <<EOF\n"
                    ],
                    [
                        146,
                        "{\n"
                    ],
                    [
                        147,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        148,
                        "  \"Statement\": [\n"
                    ],
                    [
                        149,
                        "    {\n"
                    ],
                    [
                        150,
                        "      \"Action\": [\n"
                    ],
                    [
                        151,
                        "        \"s3:*\",\n"
                    ],
                    [
                        152,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        153,
                        "        \"rds:*\"\n"
                    ],
                    [
                        154,
                        "      ],\n"
                    ],
                    [
                        155,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        156,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        157,
                        "    }\n"
                    ],
                    [
                        158,
                        "  ]\n"
                    ],
                    [
                        159,
                        "}\n"
                    ],
                    [
                        160,
                        "EOF\n"
                    ],
                    [
                        161,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    141,
                    161
                ],
                "resource": "aws_iam_role_policy.ec2policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument"
            },
            {
                "check_id": "CKV_AWS_63",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        141,
                        "resource \"aws_iam_role_policy\" \"ec2policy\" {\n"
                    ],
                    [
                        142,
                        "  name = \"${local.resource_prefix.value}-policy\"\n"
                    ],
                    [
                        143,
                        "  role = aws_iam_role.ec2role.id\n"
                    ],
                    [
                        144,
                        "\n"
                    ],
                    [
                        145,
                        "  policy = <<EOF\n"
                    ],
                    [
                        146,
                        "{\n"
                    ],
                    [
                        147,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        148,
                        "  \"Statement\": [\n"
                    ],
                    [
                        149,
                        "    {\n"
                    ],
                    [
                        150,
                        "      \"Action\": [\n"
                    ],
                    [
                        151,
                        "        \"s3:*\",\n"
                    ],
                    [
                        152,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        153,
                        "        \"rds:*\"\n"
                    ],
                    [
                        154,
                        "      ],\n"
                    ],
                    [
                        155,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        156,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        157,
                        "    }\n"
                    ],
                    [
                        158,
                        "  ]\n"
                    ],
                    [
                        159,
                        "}\n"
                    ],
                    [
                        160,
                        "EOF\n"
                    ],
                    [
                        161,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    141,
                    161
                ],
                "resource": "aws_iam_role_policy.ec2policy",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument"
            },
            {
                "check_id": "CKV_AWS_46",
                "check_name": "Ensure no hard coded AWS access key and and secret key exists in EC2 user data",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami           = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials"
            },
            {
                "check_id": "CKV_AWS_25",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription"
            },
            {
                "check_id": "CKV_AWS_57",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE"
            },
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_41",
                "check_name": "Ensure no hard coded AWS access key and and secret key exists in provider",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        7,
                        "provider \"aws\" {\n"
                    ],
                    [
                        8,
                        "  alias      = \"plain_text_access_keys_provider\"\n"
                    ],
                    [
                        9,
                        "  region     = \"us-west-1\"\n"
                    ],
                    [
                        10,
                        "  access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        11,
                        "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        12,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/providers.tf",
                "file_line_range": [
                    7,
                    12
                ],
                "resource": "aws",
                "evaluations": {
                    "profile": {
                        "var_file": "/terraform/consts.tf",
                        "value": "default",
                        "definitions": [
                            {
                                "definition_name": "profile",
                                "definition_expression": "${var.profile}",
                                "definition_path": "provider/0/aws/profile/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "/terraform/consts.tf",
                        "value": "us-east-1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "provider/0/aws/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.provider.aws.credentials"
            },
            {
                "check_id": "CKV_AWS_60",
                "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_iam_role\" \"iam_for_lambda\" {\n"
                    ],
                    [
                        2,
                        "  name = \"${local.resource_prefix.value}-analysis-lambda\"\n"
                    ],
                    [
                        3,
                        "\n"
                    ],
                    [
                        4,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        5,
                        "{\n"
                    ],
                    [
                        6,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        7,
                        "  \"Statement\": [\n"
                    ],
                    [
                        8,
                        "    {\n"
                    ],
                    [
                        9,
                        "      \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        10,
                        "      \"Principal\": {\n"
                    ],
                    [
                        11,
                        "        \"Service\": \"lambda.amazonaws.com\"\n"
                    ],
                    [
                        12,
                        "      },\n"
                    ],
                    [
                        13,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        14,
                        "      \"Sid\": \"\"\n"
                    ],
                    [
                        15,
                        "    }\n"
                    ],
                    [
                        16,
                        "  ]\n"
                    ],
                    [
                        17,
                        "}\n"
                    ],
                    [
                        18,
                        "EOF\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/lambda.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "aws_iam_role.iam_for_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume"
            },
            {
                "check_id": "CKV_AWS_61",
                "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_iam_role\" \"iam_for_lambda\" {\n"
                    ],
                    [
                        2,
                        "  name = \"${local.resource_prefix.value}-analysis-lambda\"\n"
                    ],
                    [
                        3,
                        "\n"
                    ],
                    [
                        4,
                        "  assume_role_policy = <<EOF\n"
                    ],
                    [
                        5,
                        "{\n"
                    ],
                    [
                        6,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        7,
                        "  \"Statement\": [\n"
                    ],
                    [
                        8,
                        "    {\n"
                    ],
                    [
                        9,
                        "      \"Action\": \"sts:AssumeRole\",\n"
                    ],
                    [
                        10,
                        "      \"Principal\": {\n"
                    ],
                    [
                        11,
                        "        \"Service\": \"lambda.amazonaws.com\"\n"
                    ],
                    [
                        12,
                        "      },\n"
                    ],
                    [
                        13,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        14,
                        "      \"Sid\": \"\"\n"
                    ],
                    [
                        15,
                        "    }\n"
                    ],
                    [
                        16,
                        "  ]\n"
                    ],
                    [
                        17,
                        "}\n"
                    ],
                    [
                        18,
                        "EOF\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/lambda.tf",
                "file_line_range": [
                    1,
                    19
                ],
                "resource": "aws_iam_role.iam_for_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount"
            },
            {
                "check_id": "CKV_AWS_62",
                "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument"
            },
            {
                "check_id": "CKV_AWS_63",
                "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                "check_result": {
                    "result": "PASSED"
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_AWS_20",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"data\" {\n"
                    ],
                    [
                        2,
                        "  # bucket is public\n"
                    ],
                    [
                        3,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        4,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        5,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        6,
                        "  bucket        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        7,
                        "  acl           = \"public-read\"\n"
                    ],
                    [
                        8,
                        "  force_destroy = true\n"
                    ],
                    [
                        9,
                        "  tags = {\n"
                    ],
                    [
                        10,
                        "    Name        = \"${local.resource_prefix.value}-data\"\n"
                    ],
                    [
                        11,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_s3_bucket.data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"financials\" {\n"
                    ],
                    [
                        26,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        27,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        28,
                        "  # bucket does not have versioning\n"
                    ],
                    [
                        29,
                        "  bucket        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        30,
                        "  acl           = \"private\"\n"
                    ],
                    [
                        31,
                        "  force_destroy = true\n"
                    ],
                    [
                        32,
                        "  tags = {\n"
                    ],
                    [
                        33,
                        "    Name        = \"${local.resource_prefix.value}-financials\"\n"
                    ],
                    [
                        34,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    25,
                    37
                ],
                "resource": "aws_s3_bucket.financials",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_s3_bucket\" \"operations\" {\n"
                    ],
                    [
                        40,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        41,
                        "  # bucket does not have access logs\n"
                    ],
                    [
                        42,
                        "  bucket = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        43,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        44,
                        "  versioning {\n"
                    ],
                    [
                        45,
                        "    enabled = true\n"
                    ],
                    [
                        46,
                        "  }\n"
                    ],
                    [
                        47,
                        "  force_destroy = true\n"
                    ],
                    [
                        48,
                        "  tags = {\n"
                    ],
                    [
                        49,
                        "    Name        = \"${local.resource_prefix.value}-operations\"\n"
                    ],
                    [
                        50,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        51,
                        "  }\n"
                    ],
                    [
                        52,
                        "\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    39,
                    53
                ],
                "resource": "aws_s3_bucket.operations",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        55,
                        "resource \"aws_s3_bucket\" \"data_science\" {\n"
                    ],
                    [
                        56,
                        "  # bucket is not encrypted\n"
                    ],
                    [
                        57,
                        "  bucket = \"${local.resource_prefix.value}-data-science\"\n"
                    ],
                    [
                        58,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        59,
                        "  versioning {\n"
                    ],
                    [
                        60,
                        "    enabled = true\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "  logging {\n"
                    ],
                    [
                        63,
                        "    target_bucket = \"${aws_s3_bucket.logs.id}\"\n"
                    ],
                    [
                        64,
                        "    target_prefix = \"log/\"\n"
                    ],
                    [
                        65,
                        "  }\n"
                    ],
                    [
                        66,
                        "  force_destroy = true\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    55,
                    67
                ],
                "resource": "aws_s3_bucket.data_science",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        69,
                        "resource \"aws_s3_bucket\" \"logs\" {\n"
                    ],
                    [
                        70,
                        "  bucket = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        71,
                        "  acl    = \"log-delivery-write\"\n"
                    ],
                    [
                        72,
                        "  versioning {\n"
                    ],
                    [
                        73,
                        "    enabled = true\n"
                    ],
                    [
                        74,
                        "  }\n"
                    ],
                    [
                        75,
                        "  server_side_encryption_configuration {\n"
                    ],
                    [
                        76,
                        "    rule {\n"
                    ],
                    [
                        77,
                        "      apply_server_side_encryption_by_default {\n"
                    ],
                    [
                        78,
                        "        sse_algorithm     = \"aws:kms\"\n"
                    ],
                    [
                        79,
                        "        kms_master_key_id = \"${aws_kms_key.logs_key.arn}\"\n"
                    ],
                    [
                        80,
                        "      }\n"
                    ],
                    [
                        81,
                        "    }\n"
                    ],
                    [
                        82,
                        "  }\n"
                    ],
                    [
                        83,
                        "  force_destroy = true\n"
                    ],
                    [
                        84,
                        "  tags = {\n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-logs\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/s3.tf",
                "file_line_range": [
                    69,
                    88
                ],
                "resource": "aws_s3_bucket.logs",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_7",
                "check_name": "Ensure rotation for customer created CMKs is enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_kms_key\" \"logs_key\" {\n"
                    ],
                    [
                        2,
                        "  # key does not have rotation enabled\n"
                    ],
                    [
                        3,
                        "  description = \"${local.resource_prefix.value}-logs bucket key\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  deletion_window_in_days = 7\n"
                    ],
                    [
                        6,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/kms.tf",
                "file_line_range": [
                    1,
                    6
                ],
                "resource": "aws_kms_key.logs_key",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.KMSRotation"
            },
            {
                "check_id": "CKV_AWS_16",
                "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_db_instance\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  name                    = var.dbname\n"
                    ],
                    [
                        3,
                        "  engine                  = \"mysql\"\n"
                    ],
                    [
                        4,
                        "  option_group_name       = aws_db_option_group.default.name\n"
                    ],
                    [
                        5,
                        "  parameter_group_name    = aws_db_parameter_group.default.name\n"
                    ],
                    [
                        6,
                        "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                    ],
                    [
                        7,
                        "  vpc_security_group_ids  = [\"${aws_security_group.default.id}\"]\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                    ],
                    [
                        10,
                        "  engine_version          = \"8.0\" # Latest major version \n"
                    ],
                    [
                        11,
                        "  instance_class          = \"db.t3.micro\" \n"
                    ],
                    [
                        12,
                        "  allocated_storage       = \"20\"\n"
                    ],
                    [
                        13,
                        "  username                = \"admin\"\n"
                    ],
                    [
                        14,
                        "  password                = var.password\n"
                    ],
                    [
                        15,
                        "  apply_immediately       = true\n"
                    ],
                    [
                        16,
                        "  multi_az                = false\n"
                    ],
                    [
                        17,
                        "  backup_retention_period = 0\n"
                    ],
                    [
                        18,
                        "  storage_encrypted       = false\n"
                    ],
                    [
                        19,
                        "  skip_final_snapshot     = true\n"
                    ],
                    [
                        20,
                        "  monitoring_interval     = 0\n"
                    ],
                    [
                        21,
                        "  publicly_accessible     = true\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "  tags = {\n"
                    ],
                    [
                        24,
                        "    Name           = \"${local.resource_prefix.value}-rds\"\n"
                    ],
                    [
                        25,
                        "    Environment    = local.resource_prefix.value\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  # Ignore password changes from tf plan diff\n"
                    ],
                    [
                        29,
                        "  lifecycle {\n"
                    ],
                    [
                        30,
                        "    ignore_changes = [\"password\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    1,
                    32
                ],
                "resource": "aws_db_instance.default",
                "evaluations": {
                    "dbname": {
                        "var_file": "/terraform/consts.tf",
                        "value": "db1",
                        "definitions": [
                            {
                                "definition_name": "name",
                                "definition_expression": "${var.dbname}",
                                "definition_path": "resource/0/aws_db_instance/default/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption"
            },
            {
                "check_id": "CKV_AWS_17",
                "check_name": "Ensure all data stored in the RDS bucket is not public accessible",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_db_instance\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  name                    = var.dbname\n"
                    ],
                    [
                        3,
                        "  engine                  = \"mysql\"\n"
                    ],
                    [
                        4,
                        "  option_group_name       = aws_db_option_group.default.name\n"
                    ],
                    [
                        5,
                        "  parameter_group_name    = aws_db_parameter_group.default.name\n"
                    ],
                    [
                        6,
                        "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                    ],
                    [
                        7,
                        "  vpc_security_group_ids  = [\"${aws_security_group.default.id}\"]\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                    ],
                    [
                        10,
                        "  engine_version          = \"8.0\" # Latest major version \n"
                    ],
                    [
                        11,
                        "  instance_class          = \"db.t3.micro\" \n"
                    ],
                    [
                        12,
                        "  allocated_storage       = \"20\"\n"
                    ],
                    [
                        13,
                        "  username                = \"admin\"\n"
                    ],
                    [
                        14,
                        "  password                = var.password\n"
                    ],
                    [
                        15,
                        "  apply_immediately       = true\n"
                    ],
                    [
                        16,
                        "  multi_az                = false\n"
                    ],
                    [
                        17,
                        "  backup_retention_period = 0\n"
                    ],
                    [
                        18,
                        "  storage_encrypted       = false\n"
                    ],
                    [
                        19,
                        "  skip_final_snapshot     = true\n"
                    ],
                    [
                        20,
                        "  monitoring_interval     = 0\n"
                    ],
                    [
                        21,
                        "  publicly_accessible     = true\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "  tags = {\n"
                    ],
                    [
                        24,
                        "    Name           = \"${local.resource_prefix.value}-rds\"\n"
                    ],
                    [
                        25,
                        "    Environment    = local.resource_prefix.value\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  # Ignore password changes from tf plan diff\n"
                    ],
                    [
                        29,
                        "  lifecycle {\n"
                    ],
                    [
                        30,
                        "    ignore_changes = [\"password\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    1,
                    32
                ],
                "resource": "aws_db_instance.default",
                "evaluations": {
                    "dbname": {
                        "var_file": "/terraform/consts.tf",
                        "value": "db1",
                        "definitions": [
                            {
                                "definition_name": "name",
                                "definition_expression": "${var.dbname}",
                                "definition_path": "resource/0/aws_db_instance/default/name/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        81,
                        "  name          = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        82,
                        "  vpc_id        = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        83,
                        "\n"
                    ],
                    [
                        84,
                        "  tags = { \n"
                    ],
                    [
                        85,
                        "    Name        = \"${local.resource_prefix.value}-rds-sg\"\n"
                    ],
                    [
                        86,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        87,
                        "  }\n"
                    ],
                    [
                        88,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    80,
                    88
                ],
                "resource": "aws_security_group.default",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        90,
                        "resource \"aws_security_group_rule\" \"ingress\" {\n"
                    ],
                    [
                        91,
                        "  type              = \"ingress\"\n"
                    ],
                    [
                        92,
                        "  from_port         = \"3306\"\n"
                    ],
                    [
                        93,
                        "  to_port           = \"3306\"\n"
                    ],
                    [
                        94,
                        "  protocol          = \"tcp\"\n"
                    ],
                    [
                        95,
                        "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]\n"
                    ],
                    [
                        96,
                        "  security_group_id = aws_security_group.default.id\n"
                    ],
                    [
                        97,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    90,
                    97
                ],
                "resource": "aws_security_group_rule.ingress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription"
            },
            {
                "check_id": "CKV_AWS_23",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        99,
                        "resource \"aws_security_group_rule\" \"egress\" {\n"
                    ],
                    [
                        100,
                        "  type              = \"egress\"\n"
                    ],
                    [
                        101,
                        "  from_port         = 0\n"
                    ],
                    [
                        102,
                        "  to_port           = 0\n"
                    ],
                    [
                        103,
                        "  protocol          = \"-1\"\n"
                    ],
                    [
                        104,
                        "  cidr_blocks       = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        105,
                        "  security_group_id = \"${aws_security_group.default.id}\"\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    99,
                    106
                ],
                "resource": "aws_security_group_rule.egress",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription"
            },
            {
                "check_id": "CKV_AWS_8",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted ",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        178,
                        "resource \"aws_instance\" \"db_app\" {\n"
                    ],
                    [
                        179,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        180,
                        "  ami           = data.aws_ami.amazon-linux-2.id\n"
                    ],
                    [
                        181,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        182,
                        "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name\n"
                    ],
                    [
                        183,
                        "\n"
                    ],
                    [
                        184,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        185,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        186,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        187,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        188,
                        "#! /bin/bash\n"
                    ],
                    [
                        189,
                        "### Config from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html\n"
                    ],
                    [
                        190,
                        "sudo yum -y update\n"
                    ],
                    [
                        191,
                        "sudo yum -y install httpd php php-mysqlnd\n"
                    ],
                    [
                        192,
                        "sudo systemctl enable httpd \n"
                    ],
                    [
                        193,
                        "sudo systemctl start httpd\n"
                    ],
                    [
                        194,
                        "\n"
                    ],
                    [
                        195,
                        "sudo mkdir /var/www/inc\n"
                    ],
                    [
                        196,
                        "cat << EnD > /tmp/dbinfo.inc\n"
                    ],
                    [
                        197,
                        "<?php\n"
                    ],
                    [
                        198,
                        "define('DB_SERVER', '${aws_db_instance.default.endpoint}');\n"
                    ],
                    [
                        199,
                        "define('DB_USERNAME', '${aws_db_instance.default.username}');\n"
                    ],
                    [
                        200,
                        "define('DB_PASSWORD', '${var.password}');\n"
                    ],
                    [
                        201,
                        "define('DB_DATABASE', '${aws_db_instance.default.name}');\n"
                    ],
                    [
                        202,
                        "?>\n"
                    ],
                    [
                        203,
                        "EnD\n"
                    ],
                    [
                        204,
                        "sudo mv /tmp/dbinfo.inc /var/www/inc \n"
                    ],
                    [
                        205,
                        "sudo chown root:root /var/www/inc/dbinfo.inc\n"
                    ],
                    [
                        206,
                        "\n"
                    ],
                    [
                        207,
                        "cat << EnD > /tmp/index.php\n"
                    ],
                    [
                        208,
                        "<?php include \"../inc/dbinfo.inc\"; ?>\n"
                    ],
                    [
                        209,
                        "<html>\n"
                    ],
                    [
                        210,
                        "<body>\n"
                    ],
                    [
                        211,
                        "<h1>Sample page</h1>\n"
                    ],
                    [
                        212,
                        "<?php\n"
                    ],
                    [
                        213,
                        "\n"
                    ],
                    [
                        214,
                        "  /* Connect to MySQL and select the database. */\n"
                    ],
                    [
                        215,
                        "  \\$connection = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD);\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  if (mysqli_connect_errno()) echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n"
                    ],
                    [
                        218,
                        "\n"
                    ],
                    [
                        219,
                        "  \\$database = mysqli_select_db(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        220,
                        "\n"
                    ],
                    [
                        221,
                        "  /* Ensure that the EMPLOYEES table exists. */\n"
                    ],
                    [
                        222,
                        "  VerifyEmployeesTable(\\$connection, DB_DATABASE);\n"
                    ],
                    [
                        223,
                        "\n"
                    ],
                    [
                        224,
                        "  /* If input fields are populated, add a row to the EMPLOYEES table. */\n"
                    ],
                    [
                        225,
                        "  \\$employee_name = htmlentities(\\$_POST['NAME']);\n"
                    ],
                    [
                        226,
                        "  \\$employee_address = htmlentities(\\$_POST['ADDRESS']);\n"
                    ],
                    [
                        227,
                        "\n"
                    ],
                    [
                        228,
                        "  if (strlen(\\$employee_name) || strlen(\\$employee_address)) {\n"
                    ],
                    [
                        229,
                        "    AddEmployee(\\$connection, \\$employee_name, \\$employee_address);\n"
                    ],
                    [
                        230,
                        "  }\n"
                    ],
                    [
                        231,
                        "?>\n"
                    ],
                    [
                        232,
                        "\n"
                    ],
                    [
                        233,
                        "<!-- Input form -->\n"
                    ],
                    [
                        234,
                        "<form action=\"<?PHP echo \\$_SERVER['SCRIPT_NAME'] ?>\" method=\"POST\">\n"
                    ],
                    [
                        235,
                        "  <table border=\"0\">\n"
                    ],
                    [
                        236,
                        "    <tr>\n"
                    ],
                    [
                        237,
                        "      <td>NAME</td>\n"
                    ],
                    [
                        238,
                        "      <td>ADDRESS</td>\n"
                    ],
                    [
                        239,
                        "    </tr>\n"
                    ],
                    [
                        240,
                        "    <tr>\n"
                    ],
                    [
                        241,
                        "      <td>\n"
                    ],
                    [
                        242,
                        "        <input type=\"text\" name=\"NAME\" maxlength=\"45\" size=\"30\" />\n"
                    ],
                    [
                        243,
                        "      </td>\n"
                    ],
                    [
                        244,
                        "      <td>\n"
                    ],
                    [
                        245,
                        "        <input type=\"text\" name=\"ADDRESS\" maxlength=\"90\" size=\"60\" />\n"
                    ],
                    [
                        246,
                        "      </td>\n"
                    ],
                    [
                        247,
                        "      <td>\n"
                    ],
                    [
                        248,
                        "        <input type=\"submit\" value=\"Add Data\" />\n"
                    ],
                    [
                        249,
                        "      </td>\n"
                    ],
                    [
                        250,
                        "    </tr>\n"
                    ],
                    [
                        251,
                        "  </table>\n"
                    ],
                    [
                        252,
                        "</form>\n"
                    ],
                    [
                        253,
                        "\n"
                    ],
                    [
                        254,
                        "<!-- Display table data. -->\n"
                    ],
                    [
                        255,
                        "<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n"
                    ],
                    [
                        256,
                        "  <tr>\n"
                    ],
                    [
                        257,
                        "    <td>ID</td>\n"
                    ],
                    [
                        258,
                        "    <td>NAME</td>\n"
                    ],
                    [
                        259,
                        "    <td>ADDRESS</td>\n"
                    ],
                    [
                        260,
                        "  </tr>\n"
                    ],
                    [
                        261,
                        "\n"
                    ],
                    [
                        262,
                        "<?php\n"
                    ],
                    [
                        263,
                        "\n"
                    ],
                    [
                        264,
                        "\\$result = mysqli_query(\\$connection, \"SELECT * FROM EMPLOYEES\");\n"
                    ],
                    [
                        265,
                        "\n"
                    ],
                    [
                        266,
                        "while(\\$query_data = mysqli_fetch_row(\\$result)) {\n"
                    ],
                    [
                        267,
                        "  echo \"<tr>\";\n"
                    ],
                    [
                        268,
                        "  echo \"<td>\",\\$query_data[0], \"</td>\",\n"
                    ],
                    [
                        269,
                        "       \"<td>\",\\$query_data[1], \"</td>\",\n"
                    ],
                    [
                        270,
                        "       \"<td>\",\\$query_data[2], \"</td>\";\n"
                    ],
                    [
                        271,
                        "  echo \"</tr>\";\n"
                    ],
                    [
                        272,
                        "}\n"
                    ],
                    [
                        273,
                        "?>\n"
                    ],
                    [
                        274,
                        "\n"
                    ],
                    [
                        275,
                        "</table>\n"
                    ],
                    [
                        276,
                        "\n"
                    ],
                    [
                        277,
                        "<!-- Clean up. -->\n"
                    ],
                    [
                        278,
                        "<?php\n"
                    ],
                    [
                        279,
                        "\n"
                    ],
                    [
                        280,
                        "  mysqli_free_result(\\$result);\n"
                    ],
                    [
                        281,
                        "  mysqli_close(\\$connection);\n"
                    ],
                    [
                        282,
                        "\n"
                    ],
                    [
                        283,
                        "?>\n"
                    ],
                    [
                        284,
                        "\n"
                    ],
                    [
                        285,
                        "</body>\n"
                    ],
                    [
                        286,
                        "</html>\n"
                    ],
                    [
                        287,
                        "\n"
                    ],
                    [
                        288,
                        "\n"
                    ],
                    [
                        289,
                        "<?php\n"
                    ],
                    [
                        290,
                        "\n"
                    ],
                    [
                        291,
                        "/* Add an employee to the table. */\n"
                    ],
                    [
                        292,
                        "function AddEmployee(\\$connection, \\$name, \\$address) {\n"
                    ],
                    [
                        293,
                        "   \\$n = mysqli_real_escape_string(\\$connection, \\$name);\n"
                    ],
                    [
                        294,
                        "   \\$a = mysqli_real_escape_string(\\$connection, \\$address);\n"
                    ],
                    [
                        295,
                        "\n"
                    ],
                    [
                        296,
                        "   \\$query = \"INSERT INTO EMPLOYEES (NAME, ADDRESS) VALUES ('\\$n', '\\$a');\";\n"
                    ],
                    [
                        297,
                        "\n"
                    ],
                    [
                        298,
                        "   if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error adding employee data.</p>\");\n"
                    ],
                    [
                        299,
                        "}\n"
                    ],
                    [
                        300,
                        "\n"
                    ],
                    [
                        301,
                        "/* Check whether the table exists and, if not, create it. */\n"
                    ],
                    [
                        302,
                        "function VerifyEmployeesTable(\\$connection, \\$dbName) {\n"
                    ],
                    [
                        303,
                        "  if(!TableExists(\"EMPLOYEES\", \\$connection, \\$dbName))\n"
                    ],
                    [
                        304,
                        "  {\n"
                    ],
                    [
                        305,
                        "     \\$query = \"CREATE TABLE EMPLOYEES (\n"
                    ],
                    [
                        306,
                        "         ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n"
                    ],
                    [
                        307,
                        "         NAME VARCHAR(45),\n"
                    ],
                    [
                        308,
                        "         ADDRESS VARCHAR(90)\n"
                    ],
                    [
                        309,
                        "       )\";\n"
                    ],
                    [
                        310,
                        "\n"
                    ],
                    [
                        311,
                        "     if(!mysqli_query(\\$connection, \\$query)) echo(\"<p>Error creating table.</p>\");\n"
                    ],
                    [
                        312,
                        "  }\n"
                    ],
                    [
                        313,
                        "}\n"
                    ],
                    [
                        314,
                        "\n"
                    ],
                    [
                        315,
                        "/* Check for the existence of a table. */\n"
                    ],
                    [
                        316,
                        "function TableExists(\\$tableName, \\$connection, \\$dbName) {\n"
                    ],
                    [
                        317,
                        "  \\$t = mysqli_real_escape_string(\\$connection, \\$tableName);\n"
                    ],
                    [
                        318,
                        "  \\$d = mysqli_real_escape_string(\\$connection, \\$dbName);\n"
                    ],
                    [
                        319,
                        "\n"
                    ],
                    [
                        320,
                        "  \\$checktable = mysqli_query(\\$connection,\n"
                    ],
                    [
                        321,
                        "      \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_NAME = '\\$t' AND TABLE_SCHEMA = '\\$d'\");\n"
                    ],
                    [
                        322,
                        "\n"
                    ],
                    [
                        323,
                        "  if(mysqli_num_rows(\\$checktable) > 0) return true;\n"
                    ],
                    [
                        324,
                        "\n"
                    ],
                    [
                        325,
                        "  return false;\n"
                    ],
                    [
                        326,
                        "}\n"
                    ],
                    [
                        327,
                        "?>               \n"
                    ],
                    [
                        328,
                        "EnD\n"
                    ],
                    [
                        329,
                        "\n"
                    ],
                    [
                        330,
                        "sudo mv /tmp/index.php /var/www/html\n"
                    ],
                    [
                        331,
                        "sudo chown root:root /var/www/html/index.php\n"
                    ],
                    [
                        332,
                        "\n"
                    ],
                    [
                        333,
                        "\n"
                    ],
                    [
                        334,
                        "\n"
                    ],
                    [
                        335,
                        "EOF\n"
                    ],
                    [
                        336,
                        "  tags = {\n"
                    ],
                    [
                        337,
                        "    Name = \"${local.resource_prefix.value}-dbapp\"\n"
                    ],
                    [
                        338,
                        "  }\n"
                    ],
                    [
                        339,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/db-app.tf",
                "file_line_range": [
                    178,
                    339
                ],
                "resource": "aws_instance.db_app",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption"
            },
            {
                "check_id": "CKV_AWS_46",
                "check_name": "Ensure no hard coded AWS access key and and secret key exists in EC2 user data",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "/terraform/consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials"
            },
            {
                "check_id": "CKV_AWS_8",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted ",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_instance\" \"web_host\" {\n"
                    ],
                    [
                        2,
                        "  # ec2 have plain text secrets in user data\n"
                    ],
                    [
                        3,
                        "  ami           = \"${var.ami}\"\n"
                    ],
                    [
                        4,
                        "  instance_type = \"t2.nano\"\n"
                    ],
                    [
                        5,
                        "\n"
                    ],
                    [
                        6,
                        "  vpc_security_group_ids = [\n"
                    ],
                    [
                        7,
                        "  \"${aws_security_group.web-node.id}\"]\n"
                    ],
                    [
                        8,
                        "  subnet_id = \"${aws_subnet.web_subnet.id}\"\n"
                    ],
                    [
                        9,
                        "  user_data = <<EOF\n"
                    ],
                    [
                        10,
                        "#! /bin/bash\n"
                    ],
                    [
                        11,
                        "sudo apt-get update\n"
                    ],
                    [
                        12,
                        "sudo apt-get install -y apache2\n"
                    ],
                    [
                        13,
                        "sudo systemctl start apache2\n"
                    ],
                    [
                        14,
                        "sudo systemctl enable apache2\n"
                    ],
                    [
                        15,
                        "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                    ],
                    [
                        16,
                        "export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                    ],
                    [
                        17,
                        "export AWS_DEFAULT_REGION=us-west-2\n"
                    ],
                    [
                        18,
                        "echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                    ],
                    [
                        19,
                        "EOF\n"
                    ],
                    [
                        20,
                        "  tags = {\n"
                    ],
                    [
                        21,
                        "    Name = \"${local.resource_prefix.value}-ec2\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    1,
                    23
                ],
                "resource": "aws_instance.web_host",
                "evaluations": {
                    "ami": {
                        "var_file": "/terraform/consts.tf",
                        "value": "ami-09a5b0b7edf08843d",
                        "definitions": [
                            {
                                "definition_name": "ami",
                                "definition_expression": "${var.ami}",
                                "definition_path": "resource/0/aws_instance/web_host/ami/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption"
            },
            {
                "check_id": "CKV_AWS_3",
                "check_name": "Ensure all data stored in the EBS is securely encrypted ",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_ebs_volume\" \"web_host_storage\" {\n"
                    ],
                    [
                        26,
                        "  # unencrypted volume\n"
                    ],
                    [
                        27,
                        "  availability_zone = \"${var.availability_zone}\"\n"
                    ],
                    [
                        28,
                        "  #encrypted         = false  # Setting this causes the volume to be recreated on apply \n"
                    ],
                    [
                        29,
                        "  size              = 1\n"
                    ],
                    [
                        30,
                        "  tags = {\n"
                    ],
                    [
                        31,
                        "    Name = \"${local.resource_prefix.value}-ebs\"\n"
                    ],
                    [
                        32,
                        "  }\n"
                    ],
                    [
                        33,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    25,
                    33
                ],
                "resource": "aws_ebs_volume.web_host_storage",
                "evaluations": {
                    "availability_zone": {
                        "var_file": "/terraform/consts.tf",
                        "value": "us-east-1a",
                        "definitions": [
                            {
                                "definition_name": "availability_zone",
                                "definition_expression": "${var.availability_zone}",
                                "definition_path": "resource/1/aws_ebs_volume/web_host_storage/availability_zone/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.resource.aws.EBSEncryption"
            },
            {
                "check_id": "CKV_AWS_4",
                "check_name": "Ensure all data stored in the EBS Snapshot is securely encrypted ",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        35,
                        "resource \"aws_ebs_snapshot\" \"example_snapshot\" {\n"
                    ],
                    [
                        36,
                        "  # ebs snapshot without encryption\n"
                    ],
                    [
                        37,
                        "  volume_id   = \"${aws_ebs_volume.web_host_storage.id}\"\n"
                    ],
                    [
                        38,
                        "  description = \"${local.resource_prefix.value}-ebs-snapshot\"\n"
                    ],
                    [
                        39,
                        "  tags = {\n"
                    ],
                    [
                        40,
                        "    Name = \"${local.resource_prefix.value}-ebs-snapshot\"\n"
                    ],
                    [
                        41,
                        "  }\n"
                    ],
                    [
                        42,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    35,
                    42
                ],
                "resource": "aws_ebs_snapshot.example_snapshot",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.EBSSnapshotEncryption"
            },
            {
                "check_id": "CKV_AWS_24",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        50,
                        "resource \"aws_security_group\" \"web-node\" {\n"
                    ],
                    [
                        51,
                        "  # security group is open to the world in SSH port\n"
                    ],
                    [
                        52,
                        "  name        = \"${local.resource_prefix.value}-sg\"\n"
                    ],
                    [
                        53,
                        "  description = \"${local.resource_prefix.value} Security Group\"\n"
                    ],
                    [
                        54,
                        "  vpc_id      = aws_vpc.web_vpc.id\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  ingress {\n"
                    ],
                    [
                        57,
                        "    from_port = 80\n"
                    ],
                    [
                        58,
                        "    to_port   = 80\n"
                    ],
                    [
                        59,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        60,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        61,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        62,
                        "  }\n"
                    ],
                    [
                        63,
                        "  ingress {\n"
                    ],
                    [
                        64,
                        "    from_port = 22\n"
                    ],
                    [
                        65,
                        "    to_port   = 22\n"
                    ],
                    [
                        66,
                        "    protocol  = \"tcp\"\n"
                    ],
                    [
                        67,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        68,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        69,
                        "  }\n"
                    ],
                    [
                        70,
                        "  egress {\n"
                    ],
                    [
                        71,
                        "    from_port = 0\n"
                    ],
                    [
                        72,
                        "    to_port   = 0\n"
                    ],
                    [
                        73,
                        "    protocol  = \"-1\"\n"
                    ],
                    [
                        74,
                        "    cidr_blocks = [\n"
                    ],
                    [
                        75,
                        "    \"0.0.0.0/0\"]\n"
                    ],
                    [
                        76,
                        "  }\n"
                    ],
                    [
                        77,
                        "  depends_on = [aws_vpc.web_vpc]\n"
                    ],
                    [
                        78,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    50,
                    78
                ],
                "resource": "aws_security_group.web-node",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22"
            },
            {
                "check_id": "CKV_AWS_18",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs"
            },
            {
                "check_id": "CKV_AWS_52",
                "check_name": "Ensure S3 bucket has MFA delete enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3MFADelete"
            },
            {
                "check_id": "CKV_AWS_21",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning"
            },
            {
                "check_id": "CKV_AWS_19",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_s3_bucket\" \"flowbucket\" {\n"
                    ],
                    [
                        172,
                        "  bucket = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        173,
                        "  force_destroy = true\n"
                    ],
                    [
                        174,
                        "\n"
                    ],
                    [
                        175,
                        "  tags = {\n"
                    ],
                    [
                        176,
                        "    Name        = \"${local.resource_prefix.value}-flowlogs\"\n"
                    ],
                    [
                        177,
                        "    Environment = local.resource_prefix.value\n"
                    ],
                    [
                        178,
                        "  }\n"
                    ],
                    [
                        179,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/ec2.tf",
                "file_line_range": [
                    171,
                    179
                ],
                "resource": "aws_s3_bucket.flowbucket",
                "evaluations": {},
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption"
            },
            {
                "check_id": "CKV_AWS_41",
                "check_name": "Ensure no hard coded AWS access key and and secret key exists in provider",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        7,
                        "provider \"aws\" {\n"
                    ],
                    [
                        8,
                        "  alias      = \"plain_text_access_keys_provider\"\n"
                    ],
                    [
                        9,
                        "  region     = \"us-west-1\"\n"
                    ],
                    [
                        10,
                        "  access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        11,
                        "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        12,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/providers.tf",
                "file_line_range": [
                    7,
                    12
                ],
                "resource": "aws",
                "evaluations": {
                    "profile": {
                        "var_file": "/terraform/consts.tf",
                        "value": "default",
                        "definitions": [
                            {
                                "definition_name": "profile",
                                "definition_expression": "${var.profile}",
                                "definition_path": "provider/0/aws/profile/0"
                            }
                        ]
                    },
                    "region": {
                        "var_file": "/terraform/consts.tf",
                        "value": "us-east-1",
                        "definitions": [
                            {
                                "definition_name": "region",
                                "definition_expression": "${var.region}",
                                "definition_path": "provider/0/aws/region/0"
                            }
                        ]
                    }
                },
                "check_class": "checkov.terraform.checks.provider.aws.credentials"
            },
            {
                "check_id": "CKV_AWS_50",
                "check_name": "X-ray tracing is enabled for Lambda",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        21,
                        "resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                    ],
                    [
                        22,
                        "  # lambda have plain text secrets in environment variables\n"
                    ],
                    [
                        23,
                        "  filename      = \"resources/lambda_function_payload.zip\"\n"
                    ],
                    [
                        24,
                        "  function_name = \"${local.resource_prefix.value}-analysis\"\n"
                    ],
                    [
                        25,
                        "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"\n"
                    ],
                    [
                        26,
                        "  handler       = \"exports.test\"\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  runtime = \"nodejs12.x\"\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "  environment {\n"
                    ],
                    [
                        33,
                        "    variables = {\n"
                    ],
                    [
                        34,
                        "      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        35,
                        "      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        36,
                        "    }\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}"
                    ]
                ],
                "file_path": "/terraform/lambda.tf",
                "file_line_range": [
                    21,
                    38
                ],
                "resource": "aws_lambda_function.analysis_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled"
            },
            {
                "check_id": "CKV_AWS_45",
                "check_name": "Ensure no hard coded AWS access key and and secret key exists in lambda environment",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        21,
                        "resource \"aws_lambda_function\" \"analysis_lambda\" {\n"
                    ],
                    [
                        22,
                        "  # lambda have plain text secrets in environment variables\n"
                    ],
                    [
                        23,
                        "  filename      = \"resources/lambda_function_payload.zip\"\n"
                    ],
                    [
                        24,
                        "  function_name = \"${local.resource_prefix.value}-analysis\"\n"
                    ],
                    [
                        25,
                        "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"\n"
                    ],
                    [
                        26,
                        "  handler       = \"exports.test\"\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"\n"
                    ],
                    [
                        29,
                        "\n"
                    ],
                    [
                        30,
                        "  runtime = \"nodejs12.x\"\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "  environment {\n"
                    ],
                    [
                        33,
                        "    variables = {\n"
                    ],
                    [
                        34,
                        "      access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                    ],
                    [
                        35,
                        "      secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                    ],
                    [
                        36,
                        "    }\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}"
                    ]
                ],
                "file_path": "/terraform/lambda.tf",
                "file_line_range": [
                    21,
                    38
                ],
                "resource": "aws_lambda_function.analysis_lambda",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials"
            },
            {
                "check_id": "CKV_AWS_40",
                "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.) ",
                "check_result": {
                    "result": "FAILED"
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_iam_user_policy\" \"userpolicy\" {\n"
                    ],
                    [
                        17,
                        "  name = \"excess_policy\"\n"
                    ],
                    [
                        18,
                        "  user = \"${aws_iam_user.user.name}\"\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  policy = <<EOF\n"
                    ],
                    [
                        21,
                        "{\n"
                    ],
                    [
                        22,
                        "  \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        23,
                        "  \"Statement\": [\n"
                    ],
                    [
                        24,
                        "    {\n"
                    ],
                    [
                        25,
                        "      \"Action\": [\n"
                    ],
                    [
                        26,
                        "        \"ec2:*\",\n"
                    ],
                    [
                        27,
                        "        \"s3:*\",\n"
                    ],
                    [
                        28,
                        "        \"lambda:*\",\n"
                    ],
                    [
                        29,
                        "        \"cloudwatch:*\"\n"
                    ],
                    [
                        30,
                        "      ],\n"
                    ],
                    [
                        31,
                        "      \"Effect\": \"Allow\",\n"
                    ],
                    [
                        32,
                        "      \"Resource\": \"*\"\n"
                    ],
                    [
                        33,
                        "    }\n"
                    ],
                    [
                        34,
                        "  ]\n"
                    ],
                    [
                        35,
                        "}\n"
                    ],
                    [
                        36,
                        "EOF\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/terraform/iam.tf",
                "file_line_range": [
                    16,
                    37
                ],
                "resource": "aws_iam_user_policy.userpolicy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 30,
        "failed": 36,
        "skipped": 0,
        "parsing_errors": 0,
        "checkov_version": "1.0.313"
    }
}
