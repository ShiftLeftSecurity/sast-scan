name: Release Scan AppImage

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3.8 python3.8-dev python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev php php-curl php-zip php-bcmath php-json php-pear php-mbstring php-dev
        # Install appimagetool AppImage
        sudo wget https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
        sudo chmod +x /usr/local/bin/appimagetool
        sudo pip3 install git+https://github.com/AppImageCrafters/appimage-builder.git
        mkdir -p appimage-builder-cache
        wget https://github.com/AppImage/AppImageKit/releases/download/12/runtime-x86_64 -O appimage-builder-cache/runtime-x86_64
    - name: Build AppImage
      run: |
        appimage-builder --recipe appimage-builder.yml --skip-test
      env:
        UPDATE_INFO: gh-releases-zsync|ShiftLeftSecurity|sast-scan|latest|*x86_64.AppImage.zsync
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: scan-latest-x86_64.AppImage
        asset_name: scan
        asset_content_type: application/octet-stream
