trigger:
- master
- feature/*
pool:
  vmImage: 'ubuntu-latest'
variables:
  tag: '$(Build.SourceBranchName)'

stages:
- stage: Builders
  displayName: Build and Release scan images
  jobs:
  - job: Build
    displayName: Docker Build and Push - default
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: sl_docker
    - task: Docker@2
      displayName: Build base image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: shiftleft/scan
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Release base image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: shiftleft/scan
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    - task: Docker@2
      displayName: Build alias image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: shiftleft/sast-scan
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Release alias image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: shiftleft/sast-scan
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - job: Build_slim
    displayName: Docker Build and Push - slim
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: sl_docker
    - task: Docker@2
      displayName: Build slim image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-dynamic-lang'
        repository: shiftleft/scan-slim
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Release slim image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-dynamic-lang'
        repository: shiftleft/scan-slim
        buildContext: $(Build.SourcesDirectory)
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - job: Build_oss
    displayName: Docker Build and Push - oss
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: sl_docker
    - task: Docker@2
      displayName: Build oss image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-oss'
        repository: shiftleft/scan-oss
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Release oss image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-oss'
        repository: shiftleft/scan-oss
        buildContext: $(Build.SourcesDirectory)
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - job: Build_java
    displayName: Docker Build and Push - Java
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: sl_docker
    - task: Docker@2
      displayName: Build java image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-java'
        repository: shiftleft/scan-java
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Release java image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-java'
        repository: shiftleft/scan-java
        buildContext: $(Build.SourcesDirectory)
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - job: Build_csharp
    displayName: Docker Build and Push - Csharp
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: sl_docker
    - task: Docker@2
      displayName: Build csharp image
      inputs:
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-csharp'
        repository: shiftleft/scan-csharp
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build csharp image
      inputs:
        command: 'push'
        dockerfile: '$(Build.SourcesDirectory)/ci/Dockerfile-csharp'
        repository: shiftleft/scan-csharp
        buildContext: $(Build.SourcesDirectory)
        tags: |
          latest
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
